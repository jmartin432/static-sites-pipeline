AWSTemplateFormatVersion: '2010-09-09'
Description: The AWS CloudFormation template for Static Sites deployment pipelines

Parameters:
  Region:
    Type: String
    Default: us-east-1
  TimeStamp:
    Type: String
  AccountId:
    Type: String
    Default: '{{resolve:ssm:account-id:1}}'
  BranchName:
    Description: github branch name
    Type: String
    Default: master
  GitHubOwner:
    Type: String
    Default: jmartin432
  Email:
    Type: String
    Default: info@justinlmartin.com
  ArtifactBucketName:
    Type: String
    Default: '{{resolve:ssm:static-sites-pipeline-artifacts-bucket:1}}'
  DeploymentBucketDevName:
    Type: String
    Default: '{{resolve:ssm:static-sites-pipeline-deployment-dev-bucket:1}}'
  DeploymentBucketProdName:
    Type: String
    Default: '{{resolve:ssm:static-sites-pipeline-deployment-prod-bucket:1}}'
  LambdasBucketName:
    Type: String
    Default: '{{resolve:ssm:static-sites-pipeline-lambdas-bucket:1}}'
  SlackWebHookPath:
    Type: String
    Default: '{{resolve:secretsmanager:slack-webhook-paths:SecretString:static-sites-pipeline}}'
  StaticSitesCdnDevId:
    Type: String
    Default: '{{resolve:ssm:static-sites-cdn-dev-id:1}}'
  StaticSitesCdnProdId:
    Type: String
    Default: '{{resolve:ssm:static-sites-cdn-prod-id:1}}'
  GoogMapsApiKey:
    Type: String
    Default: '{{resolve:secretsmanager:google-maps-api:SecretString:key}}'

Resources:

# Buckets

  ArtifactStoreBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref ArtifactBucketName
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256

  DeploymentBucketDev:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref DeploymentBucketDevName
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256

  DeploymentBucketProd:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref DeploymentBucketProdName
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256

  LambdasBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref LambdasBucketName
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256

# Log Groups

  PipelineLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: static-sites-pipeline-log-group
      RetentionInDays: 14

  PortfolioBuildLogStream:
    Type: AWS::Logs::LogStream
    Properties:
      LogGroupName: !Ref PipelineLogGroup
      LogStreamName: static-sites-portfolio-codebuild-log-stream

# SNS

  PipelineStatusTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: Static Sites Pipeline Status Topic
      TopicName: static-sites-pipeline-sns-topic

  SlackRouterPipelineStatusSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !GetAtt SlackRouterLambda.Arn
      Protocol: lambda
      Region: !Ref Region
      TopicArn: !Ref PipelineStatusTopic
    DependsOn:
      - SlackRouterLambda

  CacheInvalidationTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: Static Sites Pipeline Cache Invalidation Topic
      TopicName: static-sites-pipeline-cache-invalidation-topic

  CacheInvalidationLambdaTopicSubription:
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !GetAtt CacheInvalidationLambda.Arn
      Protocol: lambda
      Region: !Ref Region
      TopicArn: !Ref CacheInvalidationTopic
    DependsOn:
      - CacheInvalidationLambda

# Rules

  CodeBuildSuccessRule:
    Type: AWS::Events::Rule
    Properties:
      Description: Static Sites Events Rule for CodeBuild Success
      EventPattern:
        source:
          - aws.codebuild
        detail-type:
          - CodeBuild Build State Change
        detail:
          build-status:
            - SUCCEEDED
      Name: static-sites-pipleline-codebuild-success-rule
      RoleArn: !GetAtt EventsRuleRole.Arn
      State: ENABLED
      Targets:
        - Arn: !GetAtt DeployLambda.Arn
          Id: deploy_lambda
    DependsOn:
      - DeployLambda

  CodeBuildStateChangeRule:
    Type: AWS::Events::Rule
    Properties:
      Description: Static Sites Events Rule for CodeBuild State Change
      EventPattern:
        source:
          - aws.codebuild
        detail-type:
          - CodeBuild Build State Change
      Name: static-sites-pipleline-codebuild-state-change-rule
      RoleArn: !GetAtt EventsRuleRole.Arn
      State: ENABLED
      Targets:
        - Arn: !GetAtt SlackRouterLambda.Arn
          Id: slack_router_lambda
    DependsOn:
      - SlackRouterLambda

# CodeBuild

  PortfolioCodeBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: portfolio-codebuild
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      BadgeEnabled: false
      Description: Portfolio CodeBuild
      Source:
        Auth:
          Type: OAUTH
        BuildSpec: buildspec.yml
        GitCloneDepth: 0
        GitSubmodulesConfig:
          FetchSubmodules: false
        InsecureSsl: false
        Location: https://github.com/jmartin432/portfolio.git
        ReportBuildStatus: false
        SourceIdentifier: portfolio_source
        Type: GITHUB
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:4.0
        ImagePullCredentialsType: CODEBUILD
        Type: LINUX_CONTAINER
        PrivilegedMode: true
      QueuedTimeoutInMinutes: 5
      Artifacts:
        ArtifactIdentifier: portfolio_artifacts
        EncryptionDisabled: false
        Location: !Ref ArtifactBucketName
        Name: portfolio.zip
        NamespaceType: NONE
        Path: portfolio-artifacts
        Packaging: ZIP
        Type: S3
      Triggers:
        Webhook: true
      LogsConfig:
        CloudWatchLogs:
          GroupName: !Ref PipelineLogGroup
          StreamName: !Ref PortfolioBuildLogStream
          Status: ENABLED
      TimeoutInMinutes: 5

  SpaceBlobManCodeBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: spaceblobman-codebuild
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      BadgeEnabled: false
      Description: SpaceBlobMan CodeBuild
      Source:
        Auth:
          Type: OAUTH
        BuildSpec: buildspec.yml
        GitCloneDepth: 0
        GitSubmodulesConfig:
          FetchSubmodules: false
        InsecureSsl: false
        Location: https://github.com/jmartin432/spaceblobman.git
        ReportBuildStatus: false
        SourceIdentifier: spaceblobman_source
        Type: GITHUB
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:4.0
        ImagePullCredentialsType: CODEBUILD
        Type: LINUX_CONTAINER
        PrivilegedMode: true
      QueuedTimeoutInMinutes: 5
      Artifacts:
        ArtifactIdentifier: spaceblobman_artifacts
        EncryptionDisabled: false
        Location: !Ref ArtifactBucketName
        Name: spaceblobman.zip
        NamespaceType: NONE
        Path: spaceblobman-artifacts
        Packaging: ZIP
        Type: S3
      Triggers:
        Webhook: true
      LogsConfig:
        CloudWatchLogs:
          GroupName: !Ref PipelineLogGroup
          StreamName: !Ref PortfolioBuildLogStream
          Status: ENABLED
      TimeoutInMinutes: 5

  SunriseSunsetCodeBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: sunrise-sunset-codebuild
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      BadgeEnabled: false
      Description: SunriseSunset CodeBuild
      Source:
        Auth:
          Type: OAUTH
        BuildSpec: buildspec.yml
        GitCloneDepth: 0
        GitSubmodulesConfig:
          FetchSubmodules: false
        InsecureSsl: false
        Location: https://github.com/jmartin432/sunrise-sunset.git
        ReportBuildStatus: false
        SourceIdentifier: sunrise_sunset_source
        Type: GITHUB
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:4.0
        ImagePullCredentialsType: CODEBUILD
        Type: LINUX_CONTAINER
        PrivilegedMode: true
#        EnvironmentVariables:
#          - Name: VUE_APP_GOOGLE_MAPS_API_KEY
#            Type: SECRETS_MANAGER
#            Value: !Ref GoogMapsApiKey
      QueuedTimeoutInMinutes: 5
      Artifacts:
        ArtifactIdentifier: sunrise_sunset_artifacts
        EncryptionDisabled: false
        Location: !Ref ArtifactBucketName
        Name: sunrise-sunset.zip
        NamespaceType: NONE
        Path: sunrise-sunset-artifacts
        Packaging: ZIP
        Type: S3
      Triggers:
        Webhook: true
      LogsConfig:
        CloudWatchLogs:
          GroupName: !Ref PipelineLogGroup
          StreamName: !Ref PortfolioBuildLogStream
          Status: ENABLED
      TimeoutInMinutes: 5

# Lambdas

  DeployLambda:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Ref LambdasBucketName
        S3Key: !Sub ${TimeStamp}/lambdas.zip
      FunctionName: static-sites-pipeline-deploy-lambda
      Environment:
        Variables:
          ArtifactBucket: !Ref ArtifactBucketName
          DeployBucketDev: !Ref DeploymentBucketDevName
          DeployBucketProd: !Ref DeploymentBucketProdName
          StatusTopicArn: !Ref PipelineStatusTopic
          CacheInvalidationTopicArn: !Ref CacheInvalidationTopic
      Handler: deploy-lambda.handler
      MemorySize: 128
      Role: !GetAtt LambdaRole.Arn
      Runtime: python3.8
      Timeout: 30
      Description: Deploys Artifacts to S3 Deploy Buckets
    DependsOn:
      - LambdaRole
      - PipelineStatusTopic

  DeployLambdaCodeBuildEventTriggerPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !Ref DeployLambda
      Principal: 'events.amazonaws.com'
      SourceArn: !GetAtt CodeBuildSuccessRule.Arn
    DependsOn:
      - DeployLambda

  SlackRouterLambda:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Ref LambdasBucketName
        S3Key: !Sub ${TimeStamp}/lambdas.zip
      FunctionName: static-sites-pipeline-slack-router-lambda
      Environment:
        Variables:
          SlackWebHookPath: !Ref SlackWebHookPath
      Handler: slack-router-lambda.handler
      MemorySize: 128
      Role: !GetAtt LambdaRole.Arn
      Runtime: python3.8
      Timeout: 5
      Description: Sends Pipeline Slack Notifications
    DependsOn:
      - LambdaRole

  SlackRouterLambdaCodeBuildEventTriggerPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !Ref SlackRouterLambda
      Principal: 'events.amazonaws.com'
      SourceArn: !GetAtt CodeBuildStateChangeRule.Arn
    DependsOn:
      - SlackRouterLambda

  SlackRouterLambdaSnsTriggerPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !Ref SlackRouterLambda
      Principal: 'sns.amazonaws.com'
      SourceArn: !Ref PipelineStatusTopic
    DependsOn:
      - SlackRouterLambda

  CacheInvalidationLambda:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Ref LambdasBucketName
        S3Key: !Sub ${TimeStamp}/lambdas.zip
      FunctionName: static-sites-pipeline-cache-invalidation-lambda
      Environment:
        Variables:
          StatusTopicArn: !Ref PipelineStatusTopic
          StaticSitesCdnDevId: !Ref StaticSitesCdnDevId
          StaticSitesCdnProdId: !Ref StaticSitesCdnProdId
      Handler: cache-invalidation-lambda.handler
      MemorySize: 128
      Role: !GetAtt LambdaRole.Arn
      Runtime: python3.8
      Timeout: 5
      Description: Triggers CloudFront Cache Invalidation After Deployment
    DependsOn:
      - LambdaRole

  CacheInvalidationLambdaSnsTriggerPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !Ref CacheInvalidationLambda
      Principal: 'sns.amazonaws.com'
      SourceArn: !Ref CacheInvalidationTopic
    DependsOn:
      - CacheInvalidationLambda

# Roles

  CodeBuildServiceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: static-sites-pipeline-codebuild-role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: static-sites-pipeline-codebuild-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: AllowLogging
                Effect: Allow
                Action:
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: '*'
              - Sid: AllowS3Access
                Effect: Allow
                Action:
                  - 's3:*'
                Resource:
                  - !Sub arn:aws:s3:::${DeploymentBucketDevName}/*
                  - !Sub arn:aws:s3:::${DeploymentBucketProdName}/*
                  - !Sub arn:aws:s3:::${ArtifactBucketName}/*
              - Effect: Allow
                Action:
                  - 'iam:PassRole'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'ssm:GetParameters'
                Resource: '*'


  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: static-sites-pipeline-lambda-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: static-sites-pipeline-lambda-policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Sid: AllowLogging
                Effect: Allow
                Action:
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                  - 'logs:CreateLogGroup'
                  - 'logs:DescribeLogStreams'
                Resource:
                  - '*'
              - Sid: AllowS3Access
                Effect: Allow
                Action:
                  - s3:*
                Resource:
                  - !Sub arn:aws:s3:::${DeploymentBucketDevName}/*
                  - !Sub arn:aws:s3:::${DeploymentBucketProdName}/*
                  - !Sub arn:aws:s3:::${ArtifactBucketName}/*
              - Sid: AllowSnsPublish
                Effect: Allow
                Action:
                  - 'sns:Publish'
                Resource:
                  - '*'
              - Sid: AllowCacheInvalidation
                Effect: Allow
                Action:
                  - 'cloudfront:CreateInvalidation'
                Resource:
                  - '*'
      Path: "/"

  EventsRuleRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: static-sites-pipeline-events-rule-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - events.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: static-sites-pipeline-events-rule-policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Sid: AllowLambdaInvoke
                Effect: Allow
                Action:
                  - 'lambda:InvokeFunction'
                Resource:
                  - '*'
      Path: "/"

  SNSRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: static-sites-pipeline-sns-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - sns.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: static-sites-pipeline-sns-policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Sid: AllowLambdaInvoke
                Effect: Allow
                Action:
                  - 'lambda:InvokeFunction'
                Resource:
                  - '*'
      Path: "/"


Outputs:
  LatestTimeStamp:
    Value: !Ref TimeStamp
  DeployBucketDevDomainName:
    Value: !GetAtt DeploymentBucketDev.DomainName
  DeployBucketProdDomainName:
    Value: !GetAtt DeploymentBucketProd.DomainName